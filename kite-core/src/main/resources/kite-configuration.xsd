<xs:schema xmlns="https://github.com/developframework/kite/schema"
           xmlns:xs="http://www.w3.org/2001/XMLSchema"
           targetNamespace="https://github.com/developframework/kite/schema"
           elementFormDefault="qualified">
    <xs:element name="kite-configuration">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="template-package" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:sequence>
                            <xs:element name="template" minOccurs="0" maxOccurs="unbounded">
                                <xs:complexType>
                                    <xs:group ref="childElementGroup"/>
                                    <xs:attribute name="id" type="xs:string" use="required"/>
                                    <xs:attribute name="data" type="xs:string"/>
                                    <xs:attribute name="extend" type="xs:string"/>
                                    <xs:attribute name="xml-root" type="xs:string"/>
                                    <xs:attributeGroup ref="contentElementAttributeGroup"/>
                                    <xs:attributeGroup ref="arrayElementAttributeGroup"/>
                                </xs:complexType>
                            </xs:element>
                        </xs:sequence>
                        <xs:attribute name="namespace" type="xs:string" use="required"/>
                    </xs:complexType>
                </xs:element>
            </xs:sequence>
        </xs:complexType>
    </xs:element>

    <!-- 内容节点属性组 -->
    <xs:attributeGroup name="contentElementAttributeGroup">
        <xs:attribute name="alias" type="xs:string"/>
        <xs:attribute name="converter" type="xs:string"/>
    </xs:attributeGroup>

    <!-- 数组类型的节点属性组 -->
    <xs:attributeGroup name="arrayElementAttributeGroup">
        <xs:attribute name="map" type="xs:string"/>
        <xs:attribute name="comparator" type="xs:string"/>
        <xs:attribute name="limit" type="xs:string"/>
        <xs:attribute name="xml-item" type="xs:string"/>
        <xs:attribute name="null-empty" type="xs:boolean" default="false"/>
    </xs:attributeGroup>

    <!-- 值节点属性组 -->
    <xs:attributeGroup name="propertyElementAttributeGroup">
        <xs:attributeGroup ref="contentElementAttributeGroup"/>
        <xs:attribute name="xml-cdata" type="xs:boolean" default="false"/>
    </xs:attributeGroup>

    <!-- 内容节点类型 -->
    <xs:complexType name="contentElementType">
        <xs:complexContent>
            <xs:extension base="noDataContentElementType">
                <xs:attribute name="data" type="xs:string" use="required"/>
                <xs:attribute name="naming-strategy">
                    <xs:simpleType>
                        <xs:restriction base="xs:string">
                            <xs:enumeration value="FRAMEWORK"/>
                            <xs:enumeration value="ORIGINAL"/>
                            <xs:enumeration value="LOWER_CASE"/>
                            <xs:enumeration value="UNDERLINE"/>
                            <xs:enumeration value="MIDDLE_LINE"/>
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- 无data内容节点类型 -->
    <xs:complexType name="noDataContentElementType">
        <xs:attributeGroup ref="contentElementAttributeGroup"/>
        <xs:attribute name="null-hidden" type="xs:boolean" default="false"/>
    </xs:complexType>

    <!-- 容器节点类型 -->
    <xs:complexType name="containerElementType">
        <xs:complexContent>
            <xs:extension base="contentElementType">
                <xs:group ref="childElementGroup"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- 值节点类型 -->
    <xs:complexType name="propertyElementType">
        <xs:complexContent>
            <xs:extension base="contentElementType">
                <xs:attributeGroup ref="propertyElementAttributeGroup"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- xmlAttribute节点类型 -->
    <xs:complexType name="xmlAttributeElementType">
        <xs:complexContent>
            <xs:extension base="contentElementType">
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- 子节点组 -->
    <xs:group name="childElementGroup">
        <xs:sequence>
            <xs:choice minOccurs="0" maxOccurs="unbounded">

                <!-- xml-attribute -->
                <xs:element name="xml-attribute">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="xmlAttributeElementType"/>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>

                <!-- property -->
                <xs:element name="property">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="propertyElementType"/>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>

                <!-- property-date -->
                <xs:element name="property-date">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="propertyElementType">
                                <xs:attribute name="pattern" type="xs:string"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>

                <!-- property-boolean -->
                <xs:element name="property-boolean">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="propertyElementType"/>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>

                <!-- property-unixtimestamp -->
                <xs:element name="property-unixtimestamp">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="propertyElementType"/>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>

                <!-- property-enum -->
                <xs:element name="property-enum">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="propertyElementType">
                                <xs:sequence maxOccurs="unbounded">
                                    <xs:element name="enum">
                                        <xs:complexType>
                                            <xs:attribute name="value" type="xs:string" use="required"/>
                                            <xs:attribute name="text" type="xs:string" use="required"/>
                                        </xs:complexType>
                                    </xs:element>
                                </xs:sequence>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>

                <!-- raw -->
                <xs:element name="raw">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="contentElementType"/>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>

                <!-- prototype -->
                <xs:element name="prototype">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="contentElementType"/>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>

                <!-- object -->
                <xs:element name="object">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="containerElementType"/>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>

                <!-- object-virtual -->
                <xs:element name="object-virtual">
                    <xs:complexType>
                        <xs:group ref="childElementGroup"/>
                        <xs:attribute name="alias" type="xs:string" use="required"/>
                    </xs:complexType>
                </xs:element>

                <!-- array -->
                <xs:element name="array">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="containerElementType">
                                <xs:attributeGroup ref="arrayElementAttributeGroup"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>

                <!-- this -->
                <xs:element name="this">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="noDataContentElementType">
                                <xs:group ref="childElementGroup"/>
                                <xs:attribute name="alias" type="xs:string" use="required"/>
                                <xs:attribute name="xml-cdata" type="xs:boolean" default="false"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>

                <!-- link -->
                <xs:element name="link">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="containerElementType">
                                <xs:attribute name="merge-parent" type="xs:boolean" default="false"/>
                                <xs:attribute name="xml-cdata" type="xs:boolean" default="false"/>
                                <xs:attributeGroup ref="arrayElementAttributeGroup"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>

                <!-- relevance -->
                <xs:element name="relevance">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="containerElementType">
                                <xs:attribute name="rel" type="xs:string" use="required"/>
                                <xs:attribute name="merge-parent" type="xs:boolean" default="false"/>
                                <xs:attribute name="unique" type="xs:boolean" default="false"/>
                                <xs:attribute name="inner-converter" type="xs:string"/>
                                <xs:attribute name="type">
                                    <xs:simpleType>
                                        <xs:restriction base="xs:string">
                                            <xs:enumeration value="auto"/>
                                            <xs:enumeration value="single"/>
                                            <xs:enumeration value="multiple"/>
                                        </xs:restriction>
                                    </xs:simpleType>
                                </xs:attribute>
                                <xs:attribute name="xml-cdata" type="xs:boolean" default="false"/>
                                <xs:attributeGroup ref="arrayElementAttributeGroup"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>

                <!-- include -->
                <xs:element name="include">
                    <xs:complexType>
                        <xs:attribute name="namespace" type="xs:string"/>
                        <xs:attribute name="id" type="xs:string" use="required"/>
                    </xs:complexType>
                </xs:element>

                <!-- slot -->
                <xs:element name="slot">

                </xs:element>

                <!-- if & else -->
                <xs:sequence>
                    <xs:element name="if">
                        <xs:complexType>
                            <xs:group ref="childElementGroup"/>
                            <xs:attribute name="condition" type="xs:string" use="required"/>
                        </xs:complexType>
                    </xs:element>
                    <xs:choice minOccurs="0">
                        <xs:element name="else">
                            <xs:complexType>
                                <xs:group ref="childElementGroup"/>
                            </xs:complexType>
                        </xs:element>
                    </xs:choice>
                </xs:sequence>

                <!-- switch & case -->
                <xs:element name="switch">
                    <xs:complexType>
                        <xs:sequence>
                            <xs:sequence maxOccurs="unbounded">
                                <xs:element name="case">
                                    <xs:complexType>
                                        <xs:group ref="childElementGroup"/>
                                        <xs:attribute name="test" type="xs:string" use="required"/>
                                    </xs:complexType>
                                </xs:element>
                            </xs:sequence>
                            <xs:element name="default" minOccurs="0">
                                <xs:complexType>
                                    <xs:group ref="childElementGroup"/>
                                </xs:complexType>
                            </xs:element>
                        </xs:sequence>
                        <xs:attribute name="check-data" type="xs:string"/>
                    </xs:complexType>
                </xs:element>
            </xs:choice>
        </xs:sequence>
    </xs:group>
</xs:schema>